/**
 * 
 * 银行存款有3个月、6个月定期等。从键盘输入一个日期（即为存款日期）以及定期的时间长度（单位为月，输入的时间长度可为小于等于60的任意正整数），
 * 请编程输出该定期存款的到期日期。 下面以3个月定期为例，说明定期的概念。

比如：

输入2014年4月30日，则到期日是2014年7月30日；

输入2014年3月31日，则到期日是2014年6月30日（6月没有31日，所以30日就到期）；

输入2014年11月30日，则到期日是2015年2月28日；

输入2015年11月30日，则到期日是2016年2月29日。

输入说明 :

共输入4个整数，中间以空格分隔，第一个整数表示年，第二个整数表示月，第三个整数表示日，第四个整数表示定期长度（单位为月）。

输出说明 :

输出到期日期，共输出三个整数，中间以一个空格分隔，行首与行尾均无空格。


*/
#include <iostream>
using namespace std;

int judge_day(int y, int m)
{
    int d;
    if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) //闰年,2月有29天
    {
        if (m == 2)

            d = 29;

        else if (m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12)

            d = 31;
        else
            d = 30;
    }
    else // 平年
    {
        if (m == 2)

            d = 28;

        else if (m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12)

            d = 31;
        else
            d = 30;
    }
    return d;
}

int main(void)
{
    int y, m, d, l, t1, t2, t3; // 年，月，日，定期长度
    cin >> y >> m >> d >> l;
    t1 = m + l;
    if (t1 > 12) // 年增加的情况
    {
        t3 = t1 / 12;     // 算出向后多少年
        y += t3;          // 得到年
        m = t1 - 12 * t3; // 得到月
    }
    else // 年不需要增加的情况
    {
        m = t1;
    }
    t2 = judge_day(y, m); //得到日
    if (t2 < d)           // 判断日是否需要更改
    {
        d = t2;
    }
    cout << y << " " << m << " " << d;
    return 0;
}